{"remainingRequest":"D:\\Практика\\Vue practice\\vue-pannellum-interface\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Практика\\Vue practice\\vue-pannellum-interface\\src\\components\\EditorMenu.vue?vue&type=style&index=0&id=6e87309c&scoped=true&lang=css&","dependencies":[{"path":"D:\\Практика\\Vue practice\\vue-pannellum-interface\\src\\components\\EditorMenu.vue","mtime":1610619987280},{"path":"D:\\Практика\\Vue practice\\vue-pannellum-interface\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Практика\\Vue practice\\vue-pannellum-interface\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Практика\\Vue practice\\vue-pannellum-interface\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Практика\\Vue practice\\vue-pannellum-interface\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Практика\\Vue practice\\vue-pannellum-interface\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLyogI21lbnUgewogIHdpZHRoOiA1MCU7IAp9Ki8K"},{"version":3,"sources":["EditorMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiIA;AACA;AACA","file":"EditorMenu.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id='menu'>\r\n        <fieldset>\r\n          <legend>Current panorama</legend>\r\n          <PanoramaSelector\r\n          :scenes='scenes'\r\n          :baseOptionText='\"Choose current panorama\"'\r\n          @sceneChanged='currentSceneChanged'></PanoramaSelector>\r\n        </fieldset>\r\n        <fieldset>\r\n          <legend>Panorama editor</legend>\r\n            <v-checkbox v-model='panoramaIsEditing'\r\n            label='Panorama is editing'\r\n            :disabled='!currentSceneSelected'>\r\n            </v-checkbox>\r\n            <v-btn :disabled='!panoramaIsEditing'>Get center</v-btn>\r\n            <v-select v-model='spotType'\r\n              :disabled='isInputDisabled'\r\n              :items='spotTypes'\r\n              item-text='text'\r\n              item-value='value'\r\n              label='Choose spot type'>\r\n            </v-select>\r\n            <PanoramaSelector  \r\n              :disabilityCondition='isTransitSceneDisabeled'\r\n              :scenes='scenes' \r\n              :baseOptionText='\"Choose panorama for transition\"'\r\n              @sceneChanged='transitionSceneChanged'></PanoramaSelector>\r\n          <v-text-field v-model='pitch' label='pitch' :disabled='isInputDisabled'></v-text-field>\r\n          <v-text-field label='yaw' v-model='yaw' :disabled='isInputDisabled'></v-text-field>\r\n          <v-text-field label='description' v-model='description' :disabled='isInputDisabled'></v-text-field>\r\n          <v-btn-toggle id='buttons'>\r\n            <v-btn :disabled='isButtonDisabled' @click='addHotSpot'>Add spot</v-btn>\r\n            <v-btn :disabled='isButtonDisabled'>Delete spot</v-btn>\r\n            <v-btn :disabled='isButtonDisabled'>Move spot</v-btn>\r\n          </v-btn-toggle>\r\n          <v-btn :disabled='true'>Syncronise</v-btn>\r\n        </fieldset>\r\n      </div>\r\n</template>\r\n\r\n<script>\r\nimport PanoramaSelector from '@/components/PanoramaSelector';\r\nimport Controller from '@/controller.js'\r\n\r\nimport '@/panoramas/1.jpg';\r\nimport '@/panoramas/2.jpg';\r\n\r\nlet controller = new Controller();\r\nconsole.log(controller);\r\n\r\nexport default {\r\n    name: 'EditorMenu',\r\n    data() {\r\n      return {\r\n        scenes: [\r\n          {\r\n            id: 0,\r\n            path: 'panoramas/1.jpg',\r\n            title: 'Entry'\r\n          },\r\n          {\r\n            id: 1,\r\n            path: 'panoramas/2.jpg',\r\n            title: 'Middle of the room'\r\n          }\r\n        ],\r\n        currentScene: undefined,\r\n        transitionScene: undefined,\r\n        panoramaIsEditing: false,\r\n        spotTypes: [\r\n          {\r\n            value: 'info',\r\n            text: 'Info spot'\r\n          },\r\n          {\r\n            value: 'scene',\r\n            text: 'Transition spot'\r\n          }\r\n        ],\r\n        spotType: 'info',\r\n        pitch: '',\r\n        yaw: '',\r\n        description: ''\r\n    }\r\n  },\r\n  computed: {\r\n    isInputDisabled() {\r\n      return !this.panoramaIsEditing;\r\n    },\r\n    isButtonDisabled() {\r\n      let isPitchAcceptable = this.pitch != '' &&\r\n         !isNaN(parseFloat(this.pitch)) &&\r\n         parseFloat(this.pitch) <= 180 &&\r\n         parseFloat(this.pitch) >= -180;\r\n      let isYawAcceptable = this.yaw != '' &&\r\n         !isNaN(parseFloat(this.yaw)) &&\r\n         parseFloat(this.yaw) <= 90 &&\r\n         parseFloat(this.yaw) >= -90;\r\n      let isDescriptionAcceptaple = this.description != '';\r\n      let isTransitionSceneChosen = this.spotType == 'scene' && this.transitionScene != undefined || this.spotType == 'info';\r\n      return !isPitchAcceptable || !isYawAcceptable || !isDescriptionAcceptaple || !isTransitionSceneChosen || !this.panoramaIsEditing;\r\n    },\r\n    currentSceneSelected() {\r\n      return this.currentScene != undefined;\r\n    },\r\n    isTransitSceneDisabeled() {\r\n      return !this.panoramaIsEditing || this.spotType != 'scene' || this.spotType == undefined; \r\n    }\r\n  },\r\n  methods: {\r\n    currentSceneChanged(scene) {\r\n      this.currentScene = scene;\r\n    },\r\n    transitionSceneChanged(scene) {\r\n      this.transitionScene = scene;\r\n    },\r\n    addHotSpot() {\r\n      // ControllerService.methods.addHotSpot(this.spotType, \r\n      //   this.pitch, this.yaw, undefined, this.transitionScene);\r\n    }\r\n  },\r\n  components: {\r\n    PanoramaSelector\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  /* #menu {\r\n    width: 50%; \r\n  }*/\r\n</style>"]}]}