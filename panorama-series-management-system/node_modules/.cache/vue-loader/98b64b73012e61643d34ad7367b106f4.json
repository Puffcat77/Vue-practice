{"remainingRequest":"D:\\Практика\\Vue practice\\vue-pannellum-interface\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Практика\\Vue practice\\vue-pannellum-interface\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Практика\\Vue practice\\vue-pannellum-interface\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Практика\\Vue practice\\vue-pannellum-interface\\src\\App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"D:\\Практика\\Vue practice\\vue-pannellum-interface\\src\\App.vue","mtime":1607428869946},{"path":"D:\\Практика\\Vue practice\\vue-pannellum-interface\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Практика\\Vue practice\\vue-pannellum-interface\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Практика\\Vue practice\\vue-pannellum-interface\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Практика\\Vue practice\\vue-pannellum-interface\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}